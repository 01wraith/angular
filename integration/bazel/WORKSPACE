workspace(name = "bazel_integration_test")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Fetch rules_nodejs so we can install our npm dependencies
http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "f9e7b9f42ae202cc2d2ce6d698ccb49a9f7f7ea572a78fd451696d03ef2ee116",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/1.6.0/rules_nodejs-1.6.0.tar.gz"],
)

# Fetch sass rules for compiling sass files
http_archive(
    name = "io_bazel_rules_sass",
    sha256 = "77e241148f26d5dbb98f96fe0029d8f221c6cb75edbb83e781e08ac7f5322c5f",
    strip_prefix = "rules_sass-1.24.0",
    urls = [
        "https://github.com/bazelbuild/rules_sass/archive/1.24.0.zip",
        "https://mirror.bazel.build/github.com/bazelbuild/rules_sass/archive/1.24.0.zip",
    ],
)

# Check the bazel version and download npm dependencies
load("@build_bazel_rules_nodejs//:index.bzl", "node_repositories", "yarn_install")

# Setup the Node.js toolchain
node_repositories(
    # Use same node version as root angular WORKSPACE since
    # we share node_module packages and some require node >= 10.15.0
    node_repositories = {
        "12.18.0-darwin_amd64": ("node-v12.18.0-darwin-x64.tar.gz", "node-v12.18.0-darwin-x64", "11fe50e670315d2d3c46317d23f7a019f46a3d08b534fbadee9a1bc3d4f81852"),
        "12.18.0-linux_amd64": ("node-v12.18.0-linux-x64.tar.xz", "node-v12.18.0-linux-x64", "2febc2506c298048bfddf896056be6191c1f08716876d960a4990bd63a7fe05a"),
        "12.18.0-windows_amd64": ("node-v12.18.0-win-x64.zip", "node-v12.18.0-win-x64", "ca73a989eba5e863971cb600e5520cb4c5edf9c600fe8f76d9e4771ad03b5d08"),
    },
    node_version = "12.18.0",
    yarn_version = "1.12.1",
)

# Install our npm dependencies into @npm
yarn_install(
    name = "npm",
    package_json = "//:package.json",
    # Turn off symlink_node_modules here as it causes flakiness with missing
    # files in node_modules.
    # TODO: track down the root cause of the flakiness; current suspect is that
    # it is an issue with managed_directories when resources are limited
    symlink_node_modules = False,
    yarn_lock = "//:yarn.lock",
)

# Install all bazel dependencies of our npm packages
load("@npm//:install_bazel_dependencies.bzl", "install_bazel_dependencies")

install_bazel_dependencies()

# Load protractor dependencies
load("@npm_bazel_protractor//:package.bzl", "npm_bazel_protractor_dependencies")

npm_bazel_protractor_dependencies()

# Load karma dependencies
load("@npm_bazel_karma//:package.bzl", "npm_bazel_karma_dependencies")

npm_bazel_karma_dependencies()

# Setup the rules_webtesting toolchain
load("@io_bazel_rules_webtesting//web:repositories.bzl", "web_test_repositories")

web_test_repositories()

load("@io_bazel_rules_webtesting//web/versioned:browsers-0.3.2.bzl", "browser_repositories")

browser_repositories(
    chromium = True,
    firefox = True,
)

# Setup the rules_typescript tooolchain
load("@npm_bazel_typescript//:index.bzl", "ts_setup_workspace")

ts_setup_workspace()

# Setup the rules_sass toolchain
load("@io_bazel_rules_sass//sass:sass_repositories.bzl", "sass_repositories")

sass_repositories()
